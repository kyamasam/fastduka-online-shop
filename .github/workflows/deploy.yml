name: Deploy FastDuka Online Shop

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [backend, dashboard, landing-page, nginx]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create .env file for backend
      if: matrix.service == 'backend'
      env:
        PRODUCTION_APP_ENV: ${{ vars.PRODUCTION_APP_ENV }}
      run: |
        echo "$PRODUCTION_APP_ENV" > ./backend/.env

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set build context
      id: context
      run: |
        case ${{ matrix.service }} in
          backend)
            echo "context=./backend" >> $GITHUB_OUTPUT
            echo "dockerfile=./backend/Dockerfile" >> $GITHUB_OUTPUT
            ;;
          dashboard)
            echo "context=./dashboard" >> $GITHUB_OUTPUT
            echo "dockerfile=./dashboard/Dockerfile" >> $GITHUB_OUTPUT
            ;;
          landing-page)
            echo "context=./landing-page" >> $GITHUB_OUTPUT
            echo "dockerfile=./landing-page/Dockerfile" >> $GITHUB_OUTPUT
            ;;
          nginx)
            echo "context=./backend/nginx" >> $GITHUB_OUTPUT
            echo "dockerfile=./backend/nginx/Dockerfile" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ steps.context.outputs.context }}
        file: ${{ steps.context.outputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        port: ${{ secrets.DEPLOY_PORT || 22 }}
        script: |
          cd ${{ secrets.DEPLOY_PATH || '/opt/fastduka-online-shop' }}

          # Pull latest changes
          git pull origin main

          # Log in to GitHub Container Registry
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Pull latest images
          docker compose pull

          # Stop and remove old containers
          docker compose down

          # Start services with new images
          docker compose up -d

          # Clean up old images
          docker image prune -af

          # Show running containers
          docker compose ps